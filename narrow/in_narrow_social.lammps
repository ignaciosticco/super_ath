# Pedestrians in a 2D box

#shell rm in_narrow_social_print_td.txt
#shell rm in_narrow_social_print_dij.txt

#-----------------------------------#
# loops                 	    #
#-----------------------------------#

variable imax equal 80
variable i loop 80 ${imax}
label start_of_loop1
print "ITERATION i = $i"		# Loop de velocidad de deseo

variable wmax equal 1
variable w loop 1 ${wmax}
label start_of_loop4
print "ITERATION w = $w"		# Loop de ancho del pasillo

variable jmax equal 1
variable j loop 1 ${jmax}
label start_of_loop2
print "ITERATION j = $j"		# Loop de iteraciones

#-----------------------------------#
# intial conditions                 #
#-----------------------------------#

dimension        2
boundary         f f p

units            si
atom_style       sphere

region           zona1 block 0 100 0 20 -1 1 units box


create_box       1 zona1     	                             # 1 for one types of atoms

create_atoms     1 single 9.4 10 0 

variable         k   equal $i/8.0

variable         f   equal 2000.0*$k
variable         dij equal 0.6-0.08*ln($f/2000)

variable         lower equal 10.0-${dij}
variable         upper equal 10.0+${dij}

create_atoms     1 single 10 ${upper} 0 
create_atoms     1 single 10 ${lower} 0 

set type         1 mass 70.0			                     # set mass of each type of atoms
set type         1 diameter 0.6			                     # set diameter of each type of atoms

velocity         all set 0 0 0  	                      #  set vx=1m/s
comm_modify      vel yes                                      # required for gran/social style


#-----------------------------------#
# define forces                     #
#-----------------------------------#

# kn=12000 but now equals $u=0
# kappa=240000

# A=2000
# B=0.08
# R=0.3
# cutoff=3.5
# xtarget=20.6
# ytarget=10

pair_style       hybrid/overlay gran/social 0 0 0 240000 0 1 social 0.08 3.5        
pair_coeff       * * social 2000 3.5 0.3                                         
pair_coeff       * * gran/social


#-----------------------------------#
#  boundary conditions              #
#-----------------------------------#

#fix_wall_room: 

#A = 2000
#B = 0.08
#cutoff   = 3.5
#kappa    = 240000
#kappa_n  = 0.0
#rad_skin = 0.0

fix walls all wall/room zona1 2000 0.08 3.5 240000 0.0 0.0

#fix_desire: 

#m  = 70             (mass)
#vd = k              (desired velocity)
#tau = 0.5           (relaxation time )
#door_up  = 10.6     (door upper limit)
#door_dn  = 9.4      (door lower limit)
#door_x   = 40.0     (door  x position)

fix target all desire 70 $k 0.5 10.6 9.4 80     


#-----------------------------------#
#  Computes                         #
#-----------------------------------#

compute 	1 all property/atom y
variable  	b atom "c_1<9.8 || c_1>10.2"
group       boundary id > 1 
fix			3 boundary move linear 0.0 0.0 0.0 

compute 	2 all property/atom x
variable  	c atom c_2>15.0
compute     3 all reduce sum v_c
variable    d equal c_3

group       myatom id == 1
fix  		4 myatom addforce $f 0.0 0.0

compute         4 all ke/atom 
compute         5 all pe/atom pair 

variable        h atom 0
variable        l atom $k


#-----------------------------------#
#   movie                           #
#-----------------------------------#

dump         5 myatom noheader 500 in_narrow_social_print_td.txt v_l v_h x
dump_modify  5 thresh x > 15.0
dump_modify  5 append yes

dump         6 all movie 500 in_narrow_social_movie.mp4 v_b type zoom 22 shiny 0.0 center s 0.1 0.5 0
dump_modify  6 adiam 1 0.6
dump_modify  6 backcolor white
dump_modify  6 color red1 1.000 0.961 0.941 &
               color red2 0.996 0.878 0.824 &
               color red3 0.988 0.733 0.631 &
               color red4 0.988 0.573 0.447 &
               color red5 0.984 0.416 0.290 &
               color red6 0.937 0.231 0.173 &
               color red7 0.796 0.094 0.114 &
               color red8 0.647 0.059 0.082 &
               color red9 0.404 0.000 0.051
dump_modify  6 amap min max df 0 2 min 0.5 red1 min max red6

#-----------------------------------#
#   run process                     #
#-----------------------------------#

atom_modify     sort 0 0.0
timestep        0.00001
fix             1 myatom nve
thermo_style	custom step c_3 #  Tiene que haber un thermo antes, "step" es necesario

#-----------------------------------#
#   loop process                    #
#-----------------------------------#

variable nmax equal 200000
variable n loop ${nmax}
label start_of_loop3

run           500

variable      t equal 0.005*$n
variable      h atom $t

#if "$t > 0.55" then "jump SELF break"
if "$d > 0" then "jump SELF break"


next n
jump SELF start_of_loop3

#-----------------------------------#
#   end process                     #
#-----------------------------------#

label break

print "${dij}" append in_narrow_social_print_dij.txt

#-----------------------------------#
#   change loop                     #
#-----------------------------------#

clear
variable n delete

next j
jump SELF start_of_loop2
#	TERMINACION DEL LOOP 2

clear
next w
jump SELF start_of_loop4

clear
next i
jump SELF start_of_loop1



