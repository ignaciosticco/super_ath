# Pedestrians in a 2D box

variable imax equal 6
variable i loop 6 ${imax}
label start_of_loop1
print "ITERATION i = $i"		#Loop de velocidad de deseo

variable jmax equal 1
variable j loop 1 ${jmax}
label start_of_loop2
print "ITERATION j = $j"		# Loop de iteraciones

# 		 intial conditions

dimension        2
boundary         p f p

units            si
atom_style       sphere

lattice          sq 1.3 origin 0.5 0.5 0.0
region           zona1 block 0 20 0 20 -1 1 units box
region           zona2 block 20.12 40 0 20 -1 1 units box
region           zona3 block 19 21 9.4 10.6 -1 1 units box
region           todas union 3 zona1 zona2 zona3

create_box       1 todas
create_atoms     1 region zona1
#create_atoms     1 single 19.712 10.527 0
#create_atoms     1 single 19.495 10.324 0
#create_atoms     1 single 19.402 10.042 0
#create_atoms     1 single 19.454 9.7503 0
#create_atoms     1 single 19.641 9.5193 0
#create_atoms     1 single 19.915 9.4060 0

set              atom * mass 70.0
set              atom * diameter 0.6

velocity         all create 1e23 $j dist gaussian   		#  dist gaussian
comm_modify      vel yes                                        # required for gran/social style

# kn=0
# kappa=240000

pair_style       hybrid/overlay gran/social 0 0 0 240000 0 1 social 0.08 3.5        
pair_coeff       * * social 2000 3.5 0.3                                          
pair_coeff       * * gran/social

#  boundary conditions

#fix_wall_room: 

#A = 2000
#B = 0.08
#cutoff   = 3.5
#kappa    = 240000
#kappa_n  = 0.0
#rad_skin = 0.0

fix walls all wall/room todas 2000 0.08 3.5 240000 0.0 0.0

#fix_desire: 

#m  = 70             (mass)
#vd = k              (desired velocity)
#tau = 0.5           (relaxation time )
#door_up  = 10.6     (door upper limit)
#door_dn  = 9.4      (door lower limit)
#door_x   = 20.0     (door  x position)

fix target all desire 70 $i 0.5 10.6 9.4 20     

# COMPUTES

compute 		1 all property/atom x
compute 		2 all reduce sum c_1   
variable  		b atom c_1>20.0 
compute 		mycompute all reduce sum v_b
variable 		s equal c_mycompute

compute 		3 all dijkstra/atom 10.6 9.4 20    # y_up=10.6 y_dn=9.4 dij=0.31 unused=3
variable  		c atom c_3>0.0

group                   myatoms dynamic all var c

variable                h atom 0

# CAMPOS

dump         7 myatoms noheader 500 in_blocking_cluster_print_$i.txt c_3 id v_h x y vx vy fx fy
dump_modify  7 append yes

#dump         6 myatoms movie 500 in_blocking_cluster_movie_$i.mp4 type type zoom 9 shiny 0.0
#dump_modify  6 adiam 1 0.6
#dump_modify  6 backcolor white
#dump_modify  6 color red1 1.000 0.961 0.941 &
#               color red2 0.996 0.878 0.824 &
#               color red3 0.988 0.733 0.631 &
#               color red4 0.988 0.573 0.447 &
#               color red5 0.984 0.416 0.290 &
#               color red6 0.937 0.231 0.173 &
#               color red7 0.796 0.094 0.114 &
#               color red8 0.647 0.059 0.082 &
#               color red9 0.404 0.000 0.051
#dump_modify  6 amap min max df 0 2 min 0.5 red1 min max red6


# run the process

atom_modify     sort 0 0.0
timestep        0.0001
fix             1 all nve

#fix 5 all enforce2d
#thermo         500
thermo_style	custom step c_mycompute    # tiene que haber un thermo antes, "step" es necesario

#	ESTE ES EL LOOP DE UN PROCESO

variable nmax equal 200000
variable n loop ${nmax}
label start_of_loop3

run           500

variable		g atom "c_1>25"
group           	back variable g
displace_atoms          back move -12 0 0 units box
variable 		g delete
group 			back delete

variable                t equal 0.05*$n
variable                h atom $t


#if "$s > 159" then "jump SELF break"
if "$t > 2000" then "jump SELF break"

next n
jump SELF start_of_loop3


#	TERMINACION DEL PROCESO

label break

#print "$k  $j  $t $h" append faint.txt




clear
variable n delete
next j
jump SELF start_of_loop2
#	TERMINACION DEL LOOP 2



clear
next i
jump SELF start_of_loop1



